{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "model.json",
    "title": "ABR Model",
    "description": "The canonical model for Artifact-Based Rendering operations - the 'state' which is changeable by the user",
    "type": "object",

    "required": ["version", "spec"],

    "properties": {
        "version": {
            "type": "string",
            "description": "Version of the model (semantic version, update this when updating the model)",
            "const": "0.0.0"
        },

        "schemaID": {
            "type": "string",
            "description": "Version of the spec this model was created with"
        },

        "impressions": {
            "type": "array",
            "items": {"$ref": "#/definitions/Impression"},
            "description": "The data impressions that a user has created"
        }
    },

    "definitions": {
        "Impression": {
            "type": "object",
            "description": "A single data impression (ABR layer)",
            "required": ["impressionType", "uuid"],
            "properties": {
                "impressionType": {
                    "type": "string",
                    "description": "What type of data impression is it? (one of the plate types specified in the spec)"
                },
                "uuid": {
                    "format": "uuid",
                    "description": "The unique identifier for this data impression"
                },
                "name": {
                    "type": "string",
                    "description": "User-defined name of the data impression (i.e. 'blue ocean')",
                    "default": "Data Impression"
                },
                "visible": {
                    "type": "boolean",
                    "description": "Is the layer visible in the rendering engine?",
                    "default": true
                },
                "inputValues": {
                    "type": "object",
                    "description": "Input values for this data impression (i.e. Key Data, Colormap, Color Variable, etc.)",
                    "$comment": "We enforce [a-zA-Z ]+ for readability",
                    "patternProperties": {
                        "^[a-zA-Z ]+$": {"$ref": "#/definitions/InputValue"}
                    },
                    "additionalProperties": false
                }
            }
        },

        "InputValue": {
            "type": "object",
            "description": "A single input value for a data impression",
            "required": ["inputValue", "inputType"],
            "properties": {
                "inputType": {
                    "type": "string",
                    "description": "The type of this input (corresponds to a type in the ABR spec)"
                },
                "inputValue": {
                    "type": "string",
                    "description": "UUID or resolvable path where the input can be found",
                    "oneOf": [
                        { "format": "uuid" },
                        { "$ref": "#/definitions/DataPath" },
                        { "$ref": "#/definitions/Primitive" }
                    ]
                }
            }
        },

        "DataPath": {
            "type": "string",
            "$comment": "Update whenever a new data source is added to the data server. Eventually should pull this bit of schema from the data server.",
            "pattern": "^(ParaView|Generated|VTK)(:\/\/)([^/]\/*)+$"
        },

        "Primitive": {
            "$comment": "This probably should be replaced with something more useful like a regex for percentages, lengths, etc.",
            "oneOf": [
                {"type": "number"},
                {"type": "boolean"}
            ]
        },


        "Plate": {
            "type": "object",
            "description": "A Plate in ABR (e.g. a SurfacePlate) which becomes a data impression when instantiated",
            "properties": {
                "plateType": {
                    "type": "string",
                    "description": "String representation of a C# type"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the plate (semantic versioning, increment every time you change this plate)"
                },
                "inputs": {
                    "type": "array",
                    "description": "The inputs available to this plate, associated with their types",
                    "items": {"$ref": "#/definitions/Input"}
                }
            }
        },

        "Input": {
            "type": "object",
            "description": "A single input to a plate",
            "properties": {
                "inputType": {
                    "type": "string",
                    "description": "The type of this input (corresponds to a C# type, e.g. `ColormapVisAsset`)"
                },
                "inputName": {
                    "type": "string",
                    "description": "Name of the input (e.g. `Colormap`)"
                },
                "inputGroup": {
                    "type": "string",
                    "description": "The group that this input belongs to (e.g. `Colormap` and `Color Variable` belong to the `Color` group)"
                }
            }
        }
    }
}
